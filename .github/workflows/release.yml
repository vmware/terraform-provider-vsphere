---
name: Release

on:
  push:
    tags:
      - 'v*.*.*'    # Match stable releases. e.g. v1.2.3
      - 'v*.*.*-*'  # Match pre-releases. e.g. v1.2.3-beta, v1.2.3-rc.1
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
      - name: Generate Release Notes
        shell: bash
        run: |
          set -euo pipefail
          version="${GITHUB_REF#refs/tags/}"
          bash scripts/release-notes.sh "$version"
          test -s RELEASE_NOTES.md || { echo "ERROR: RELEASE_NOTES.md missing or empty"; exit 1; }
          echo "Previewing (first 40 lines):"
          sed -n '1,40p' RELEASE_NOTES.md
      - name: Import GPG Key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: latest
          args: >
            release
            --clean
            --timeout 60m
            --release-header-tmpl .goreleaser.tmpl
            --release-notes RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
